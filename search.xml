<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>html</title>
      <link href="/2023/02/22/html/"/>
      <url>/2023/02/22/html/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>指针</title>
      <link href="/2023/02/11/%E6%8C%87%E9%92%88/"/>
      <url>/2023/02/11/%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>指针学习</title>
      <link href="/2023/01/17/%E6%8C%87%E9%92%88%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/01/17/%E6%8C%87%E9%92%88%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="一、指针的理解"><a href="#一、指针的理解" class="headerlink" title="一、指针的理解"></a><strong><em>一、指针的理解</em></strong></h1><p>指针就相当于一个绝对地址，可以通过地址来直接访问或修改内存里存放的“值”，不是通过变量名，而是像坐标一样找到，房间名可能会变但坐标不会。 像东经北纬。</p><h1 id="二、指针的表示"><a href="#二、指针的表示" class="headerlink" title="二、指针的表示"></a><strong><em>二、指针的表示</em></strong></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"> int a = 10;//定义一个变量，内存有一块空间来存放a值</span><br><span class="line"> int *p = &amp;a;//int* :是指针变量 &amp;:为取地址符 </span><br><span class="line">             //将a的地址取出存放到指针变量 p里面</span><br><span class="line">printf(&quot;%d&quot;,*p);//也可以通过指针来打印</span><br><span class="line">*p=11;          //*：解引用 可修改值 </span><br><span class="line">printf（&quot;%d&quot;,a);</span><br><span class="line"> return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1、指针的大小"><a href="#1、指针的大小" class="headerlink" title="1、指针的大小"></a><strong><em>1、指针的大小</em></strong></h2><p>在32位电脑中有32根地址线，每根地址线都能表示高电压(1)和低电压(0)，那么就有2^32个地址。</p><p>由此在32位电脑中存放一个指针要4Byte来进行存储，在64位电脑中要8Byte来存储<br><img src="https://img-blog.csdnimg.cn/5ce804b72c0f4061807f64f870eaebf6.png" alt="Alt"><br><img src="https://img-blog.csdnimg.cn/ef9c4002817441db8b43c6297a7655bb.png" alt="Alt"></p><h1 id="三、指针的使用"><a href="#三、指针的使用" class="headerlink" title="三、指针的使用"></a><strong><em>三、指针的使用</em></strong></h1><h2 id="1、变量访问"><a href="#1、变量访问" class="headerlink" title="1、变量访问"></a>1、变量访问</h2><p>指针变量的大小都是相同的，不同位数的电脑除外，<br>指针的类型决定了，能够访问空间的大小<br><code>int* p:*p能够访问4个字节</code><br><code>char* p:*p能够访问1个字节</code><br><code>double *p:*p能够访问8个字节</code></p><h2 id="2、数组的指针"><a href="#2、数组的指针" class="headerlink" title="2、数组的指针"></a><strong><em>2、数组的指针</em></strong></h2><p><img src="https://img-blog.csdnimg.cn/d2bd8df9670f4df09379ecdf538f6d87.png" alt="Alt"><img src="https://img-blog.csdnimg.cn/e8e94d64878a4312bbbd22c7cc09f444.png" alt="Alt"></p><ul><li>数组在内存中存放都是连续的一块区域，不同类型的指针变量，每个内存相距也不同。</li><li>指针本身的大小在同一平台下都是四个字节的大小，但不同类型的指针，往后跳的范围不同  int后跳4字节 char跳1字节 double跳8个字节。<br><img src="https://img-blog.csdnimg.cn/335be432d9364e98bfff6e4a3ab12b40.png" alt="Alt"></li></ul><p>绝大部分数组名就是首元素的地址，将arr和arr[0]的地址都打印出来就会发现，它们的地址都是一个。arr 和sizeof(arr)这里的数组名为整个数组。 </p><h2 id="3、通过指针来实现计算字符串长度"><a href="#3、通过指针来实现计算字符串长度" class="headerlink" title="3、通过指针来实现计算字符串长度"></a><strong><em>3、通过指针来实现计算字符串长度</em></strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int strlen(char* str)</span><br><span class="line">&#123;</span><br><span class="line">char* x = str;</span><br><span class="line">char* y = str;</span><br><span class="line">while (*y != &#x27;\0&#x27;)</span><br><span class="line">&#123;</span><br><span class="line">y++;</span><br><span class="line">&#125;</span><br><span class="line">return y - x;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char arr[] = &quot;wo shi xiyangyang. !!!&quot;;</span><br><span class="line">printf(&quot;%d&quot;, strlen(arr));</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4、多级指针"><a href="#4、多级指针" class="headerlink" title="4、多级指针"></a><strong><em>4、多级指针</em></strong></h1><p><img src="https://img-blog.csdnimg.cn/2e87012096574405be00138fbb0ac46f.png" alt="Alt"></p><h1 id="5、指针数组"><a href="#5、指针数组" class="headerlink" title="5、指针数组"></a><strong><em>5、指针数组</em></strong></h1> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int a = 1;</span><br><span class="line">int b = 2;</span><br><span class="line">int c = 3;</span><br><span class="line">int* arr[] = &#123; &amp;a,&amp;b,&amp;c &#125;;</span><br><span class="line">printf(&quot;%d &quot;, *arr[0]);</span><br><span class="line">printf(&quot;%d &quot;, *arr[1]);</span><br><span class="line">printf(&quot;%d &quot;, *arr[2]);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <a href="https://cjeat.top/" title="我的仓库">仓库</a></p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c </tag>
            
            <tag> 语言 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
